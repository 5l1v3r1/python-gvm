version: 2.1

executors:
  python-35:
    docker:
      - image: circleci/python:3.5
        environment:
            PIPENV_VENV_IN_PROJECT: true
    working_directory: ~/repo
  python-36:
    docker:
      - image: circleci/python:3.6
        environment:
            PIPENV_VENV_IN_PROJECT: true
    working_directory: ~/repo
  python-37:
    docker:
      - image: circleci/python:3.7
        environment:
            PIPENV_VENV_IN_PROJECT: true
    working_directory: ~/repo

commands:
  build:
    description: "Download and build"
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            pipenv install
      - run:
          name: Install python-gvm
          command: |
            pipenv run pip install .
  test:
    description: "Download and run tests"
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pipenv install
      - run:
          name: Run unit tests
          command: |
            pipenv run python -m unittest
  test-with-codecov:
    description: "Download and run tests with code coverage"
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pipenv install
      - run:
          name: Install codecov
          command: |
            pipenv run pip install codecov
      - run:
          name: Run unit tests
          command: |
            pipenv run coverage run -m unittest
      - run:
          name: Upload coverage to Codecov
          command: pipenv run codecov
  lint:
    description: "Lint python files"
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pipenv install --dev
      - run:
          name: Check with black
          command: pipenv run black --check gvm
      - run:
          name: Check with pylint
          command: pipenv run pylint --disable=R gvm
  deploy:
    description: "Upload package to PyPI"
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pipenv install
      - run:
          name: Verify tag version
          command: pipenv run python verify-version.py ${CIRCLE_TAG}
      - run:
          name: Install twine
          command: pipenv run pip install twine
      - run:
          name: Initialize .pypirc
          command: |
            echo -e "[distutils]" >> ~/.pypirc
            echo -e "index-servers = pypi" >> ~/.pypirc
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = __token__" >> ~/.pypirc
            echo -e "password = $PYPI_TOKEN" >> ~/.pypirc
      - run:
          name: Create and upload distribution to pypi
          command: |
            rm -rf dist build python_gvm.egg-info
            pipenv run python setup.py sdist bdist_wheel
            pipenv run twine upload dist/*

jobs:
  build-35:
    executor: python-35
    steps:
      - build
  test-35:
    executor: python-35
    steps:
      - test
  build-36:
    executor: python-36
    steps:
      - build
  test-36:
    executor: python-36
    steps:
      - test
  build-37:
    executor: python-37
    steps:
      - build
  test-37:
    executor: python-37
    steps:
      - test-with-codecov
  lint-37:
    executor: python-37
    steps:
      - lint
  deploy-37:
    executor: python-37
    steps:
      - deploy


workflows:
  version: 2
  build_and_test:
    jobs:
      - build-35
      - test-35
      - build-36
      - test-36
      - build-37
      - test-37
      - lint-37
  build_and_deploy:
    jobs:
      - build-37:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - deploy-37:
          requires:
            - build-37
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
